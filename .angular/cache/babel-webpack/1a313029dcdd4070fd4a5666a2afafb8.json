{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { EmailValidator } from 'src/app/shared/validators/email-validator';\nimport { AppSettings } from 'src/app/config/app-settings';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"src/app/core/services/cla-contributor.service\";\nimport * as i4 from \"src/app/shared/services/storage.service\";\nimport * as i5 from \"src/app/shared/services/alert.service\";\nimport * as i6 from \"@angular/common\";\nconst _c0 = [\"successModal\"];\nconst _c1 = [\"inputBox\"];\nfunction IdentifyClaManagerModalComponent_div_8_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1, \" Name must contain only letters, space and ',. - also only letters are allowed at the start or end. \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"hidden\", !ctx_r7.form.controls.name.errors.pattern);\n  }\n}\nfunction IdentifyClaManagerModalComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 14);\n    i0.ɵɵtext(2, \" Name is required. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 14);\n    i0.ɵɵtext(4, \" Name should be at least 2 characters. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 14);\n    i0.ɵɵtext(6, \" Name should not exceed 255 characters. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, IdentifyClaManagerModalComponent_div_8_div_7_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !ctx_r1.form.controls.name.errors.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !ctx_r1.form.controls.name.errors.minlength);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !ctx_r1.form.controls.name.errors.maxlength);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.controls.name.value.length > 1);\n  }\n}\nfunction IdentifyClaManagerModalComponent_div_11_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"span\", 17);\n    i0.ɵɵtext(2, \"Email provided is incorrect, please check the \");\n    i0.ɵɵelementStart(3, \"a\", 18);\n    i0.ɵɵtext(4, \"FAQ Section \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \" to see valid email format. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction IdentifyClaManagerModalComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 14);\n    i0.ɵɵtext(2, \" Email address should not exceed 255 characters. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, IdentifyClaManagerModalComponent_div_11_div_3_Template, 6, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !ctx_r2.form.controls.email.errors.maxlength);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.form.controls.email.valid);\n  }\n}\nfunction IdentifyClaManagerModalComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelementStart(1, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function IdentifyClaManagerModalComponent_div_13_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onClickBackToCLANotFound();\n    });\n    i0.ɵɵtext(2, \" Go Back \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction IdentifyClaManagerModalComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 20);\n    i0.ɵɵelementStart(2, \"div\", 21);\n    i0.ɵɵelement(3, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 23);\n    i0.ɵɵtext(5, \"OR\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 21);\n    i0.ɵɵelement(7, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 27);\n    i0.ɵɵelementStart(9, \"div\", 28);\n    i0.ɵɵtext(10, \" Contact your organization's LFX Company Admin if you do not know who will be the CLA Manager. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 29);\n    i0.ɵɵlistener(\"click\", function IdentifyClaManagerModalComponent_div_17_div_1_Template_div_click_11_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.onClickContactAdmin();\n    });\n    i0.ɵɵtext(12, \"Contact Company Admin \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction IdentifyClaManagerModalComponent_div_17_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 20);\n    i0.ɵɵelementStart(2, \"div\", 21);\n    i0.ɵɵelement(3, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 23);\n    i0.ɵɵtext(5, \"OR\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 21);\n    i0.ɵɵelement(7, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 27);\n    i0.ɵɵelementStart(9, \"div\", 28);\n    i0.ɵɵtext(10, \" Please \");\n    i0.ɵɵelementStart(11, \"a\", 30);\n    i0.ɵɵlistener(\"click\", function IdentifyClaManagerModalComponent_div_17_div_2_Template_a_click_11_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.onClickSupporticket();\n    });\n    i0.ɵɵtext(12, \"click here\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \" to open a support ticket if you do not know who will be the CLA Manager. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction IdentifyClaManagerModalComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, IdentifyClaManagerModalComponent_div_17_div_1_Template, 13, 0, \"div\", 7);\n    i0.ɵɵtemplate(2, IdentifyClaManagerModalComponent_div_17_div_2_Template, 14, 0, \"div\", 7);\n    i0.ɵɵelementStart(3, \"div\", 20);\n    i0.ɵɵelementStart(4, \"div\", 21);\n    i0.ɵɵelement(5, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 23);\n    i0.ɵɵtext(7, \"OR\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 21);\n    i0.ɵɵelement(9, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 24);\n    i0.ɵɵelementStart(11, \"div\", 25);\n    i0.ɵɵelementStart(12, \"div\", 26);\n    i0.ɵɵelementStart(13, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function IdentifyClaManagerModalComponent_div_17_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.onClickBackToCLANotFound();\n    });\n    i0.ɵɵtext(14, \" Go Back \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasShowContactAdmin);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.hasShowContactAdmin);\n  }\n}\nfunction IdentifyClaManagerModalComponent_ng_template_18_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 42);\n  }\n}\nfunction IdentifyClaManagerModalComponent_ng_template_18_i_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 43);\n  }\n}\nfunction IdentifyClaManagerModalComponent_ng_template_18_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 40);\n    i0.ɵɵelementStart(1, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function IdentifyClaManagerModalComponent_ng_template_18_div_9_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return ctx_r23.onClickGoBackToIdentifyCLAManger();\n    });\n    i0.ɵɵtext(2, \" Go Back \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction IdentifyClaManagerModalComponent_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵelementStart(1, \"div\", 32);\n    i0.ɵɵelementStart(2, \"div\", 33);\n    i0.ɵɵelementStart(3, \"div\", 34);\n    i0.ɵɵtemplate(4, IdentifyClaManagerModalComponent_ng_template_18_i_4_Template, 1, 0, \"i\", 35);\n    i0.ɵɵtemplate(5, IdentifyClaManagerModalComponent_ng_template_18_i_5_Template, 1, 0, \"i\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 37);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"p\", 38);\n    i0.ɵɵtemplate(9, IdentifyClaManagerModalComponent_ng_template_18_div_9_Template, 3, 0, \"div\", 39);\n    i0.ɵɵelementStart(10, \"div\", 40);\n    i0.ɵɵelementStart(11, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function IdentifyClaManagerModalComponent_ng_template_18_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.onClickExitCLABtn();\n    });\n    i0.ɵɵtext(12, \" Exit EasyCLA \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.hasError);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.hasError);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r6.message, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.hasError);\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\nexport let IdentifyClaManagerModalComponent = /*#__PURE__*/(() => {\n  class IdentifyClaManagerModalComponent {\n    constructor(formBuilder, modalService, claContributorService, storageService, alertService) {\n      this.formBuilder = formBuilder;\n      this.modalService = modalService;\n      this.claContributorService = claContributorService;\n      this.storageService = storageService;\n      this.alertService = alertService;\n    }\n    ngOnInit() {\n      this.failedCount = 0;\n      this.hasShowContactAdmin = false;\n      this.loading = true;\n      setTimeout(() => {\n        this.hasShowContactAdminSection();\n      }, 50);\n      this.form = this.formBuilder.group({\n        name: ['', Validators.compose([Validators.required, Validators.minLength(2), Validators.maxLength(255), Validators.pattern(new RegExp(AppSettings.USER_FIRST_LAST_NAME_REGEX))])],\n        email: ['', Validators.compose([Validators.required, EmailValidator.isValid, Validators.maxLength(255)])]\n      });\n    }\n    onClickSubmit() {\n      const data = JSON.parse(this.storageService.getItem(AppSettings.NEW_ORGANIZATIONS));\n      if (data !== undefined && data !== null) {\n        // Add organization if it is not created.\n        this.addNewOrganization(data);\n      } else {\n        this.inviteCLAManager(false);\n      }\n    }\n    onClickContactAdmin() {\n      this.inviteCLAManager(true);\n    }\n    onClickSupporticket() {\n      window.open(AppSettings.SUPPORT_TICKET_LINK, '_blank');\n    }\n    addNewOrganization(data) {\n      const userModel = JSON.parse(this.storageService.getItem(AppSettings.USER));\n      this.claContributorService.addCompany(userModel.user_id, data).subscribe(response => {\n        this.storageService.removeItem(AppSettings.NEW_ORGANIZATIONS);\n        this.getOrganizationInformation(response.companyID);\n      }, exception => {\n        const msg = exception.error.Message ? exception.error.Message : exception.error.message;\n        this.alertService.error(msg);\n      });\n    }\n    getOrganizationInformation(companySFID) {\n      this.claContributorService.getOrganizationDetails(companySFID).subscribe(response => {\n        this.storageService.setItem(AppSettings.SELECTED_COMPANY, response);\n        this.inviteCLAManager(false);\n      }, exception => {\n        // To add org in salesforce take couple of seconds\n        // So called getOrganizationInformation method till result comes\n        this.failedCount++;\n        if (this.failedCount >= AppSettings.MAX_FAILED_COUNT) {\n          // end API call after 20 time failed\n          this.hasError = true;\n          this.title = 'Request Failed';\n          this.message = exception.error.message;\n          this.openDialogModal();\n        } else {\n          this.getOrganizationInformation(companySFID);\n        }\n      });\n    }\n    inviteCLAManager(hasCompanyAdmin) {\n      const company = JSON.parse(this.storageService.getItem(AppSettings.SELECTED_COMPANY));\n      const project = JSON.parse(this.storageService.getItem(AppSettings.PROJECT));\n      const data = {\n        companyID: company.companyID,\n        contactAdmin: hasCompanyAdmin,\n        claGroupID: project.project_id,\n        name: hasCompanyAdmin ? '' : this.form.controls.name.value,\n        userEmail: hasCompanyAdmin ? '' : this.form.controls.email.value\n      };\n      this.callInviteManagerAPI(data, hasCompanyAdmin);\n    }\n    callInviteManagerAPI(data, hasCompanyAdmin) {\n      this.alertService.clearAlert();\n      const user = JSON.parse(this.storageService.getItem(AppSettings.USER));\n      if (user.user_id) {\n        this.claContributorService.inviteManager(user.user_id, data).subscribe(response => {\n          this.handleSuccess(hasCompanyAdmin, response);\n        }, exception => {\n          if (exception.status === 400) {\n            // user already assigned cla-manager\n            this.hasError = false;\n            this.title = '';\n            this.message = 'This user is already a CLA Manager for this organization and project. Please contact them to process your CLA Request.';\n            this.openDialogModal();\n          } else {\n            this.handleError(exception);\n          }\n        });\n      }\n    }\n    handleSuccess(hasCompanyAdmin, response) {\n      this.hasError = false;\n      if (hasCompanyAdmin) {\n        this.title = 'Request Submitted to Company Admin';\n        this.message = 'Your Company Admin ';\n        if (response.list) {\n          const adminList = response.list.filter(admin => admin.name !== '');\n          for (const [index, admin] of adminList.entries()) {\n            this.message += '<b>' + admin.name + '</b>';\n            if (index !== adminList.length - 1 && admin.name !== null) {\n              this.message += ', ';\n            }\n          }\n        }\n        this.message += ' has been contacted, you will need to follow up with them to process your CLA request.';\n      } else {\n        // Two different success message as per from which screen he came\n        // Add Organization or from Company search page.\n        if (this.hasShowContactAdmin) {\n          // Came from Search organization flow.\n          this.title = 'Request Submitted';\n          this.message = 'Your authorized representative has been contacted. You will need to follow up with them to process your CLA request.';\n        } else {\n          // Came from Add organization flow.\n          this.title = 'Notification Sent';\n          this.message = 'An email has been sent to <b>' + this.form.controls.email.value + '</b> to request that they start the CLA signature process.';\n        }\n      }\n      this.openDialogModal();\n    }\n    hasShowContactAdminSection() {\n      const selectedCompany = JSON.parse(this.storageService.getItem(AppSettings.SELECTED_COMPANY));\n      this.claContributorService.getCompanyAdminList(selectedCompany.companyExternalID).subscribe(response => {\n        this.loading = false;\n        this.element.nativeElement.focus();\n        if (response.list.length > 0) {\n          this.hasShowContactAdmin = true;\n        }\n      }, exception => {\n        this.loading = false;\n        this.hasShowContactAdmin = false;\n        this.claContributorService.handleError(exception);\n      });\n    }\n    handleError(exception) {\n      var _a;\n      this.hasError = true;\n      this.title = 'Request Failed';\n      this.message = 'Your request is Failed due to internal server error please try later.';\n      if ((_a = exception.error) === null || _a === void 0 ? void 0 : _a.Message) {\n        this.message = exception.error.Message;\n      }\n      this.openDialogModal();\n    }\n    onClickExitCLABtn() {\n      const redirectUrl = JSON.parse(this.storageService.getItem(AppSettings.REDIRECT));\n      if (redirectUrl !== null) {\n        window.open(redirectUrl, '_self');\n      } else {\n        const error = 'Unable to fetch redirect URL.';\n        this.alertService.error(error);\n        this.modalService.dismissAll();\n      }\n    }\n    openDialogModal() {\n      this.modalService.dismissAll();\n      this.modalService.open(this.successModal, {\n        centered: true,\n        backdrop: 'static',\n        keyboard: false\n      });\n    }\n    onClickBackToCLANotFound() {\n      const data = {\n        action: 'CLA_NOT_SIGN',\n        payload: false\n      };\n      this.claContributorService.openDialogModalEvent.next(data);\n    }\n    onClickGoBackToIdentifyCLAManger() {\n      const data = {\n        action: 'IDENTIFY_CLA_MANAGER',\n        payload: ''\n      };\n      this.claContributorService.openDialogModalEvent.next(data);\n    }\n  }\n  IdentifyClaManagerModalComponent.ɵfac = function IdentifyClaManagerModalComponent_Factory(t) {\n    return new (t || IdentifyClaManagerModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.NgbModal), i0.ɵɵdirectiveInject(i3.ClaContributorService), i0.ɵɵdirectiveInject(i4.StorageService), i0.ɵɵdirectiveInject(i5.AlertService));\n  };\n  IdentifyClaManagerModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IdentifyClaManagerModalComponent,\n    selectors: [[\"app-identify-cla-manager-modal\"]],\n    viewQuery: function IdentifyClaManagerModalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.successModal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n      }\n    },\n    decls: 20,\n    vars: 9,\n    consts: [[1, \"container\"], [3, \"formGroup\"], [1, \"row\", \"justify-content-center\"], [1, \"col-12\", \"message\"], [1, \"col-10\", \"element\"], [\"type\", \"text\", \"autocomplete\", \"off\", \"name\", \"name\", \"placeholder\", \"Enter Name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"inputBox\", \"\"], [4, \"ngIf\"], [\"type\", \"text\", \"autocomplete\", \"off\", \"name\", \"email\", \"placeholder\", \"Enter Email Address\", \"formControlName\", \"email\", 1, \"form-control\"], [1, \"row\", \"justify-content-center\", \"buttons\"], [\"class\", \"col-xs-6 col-sm-6 col-md-5 col-lg-5\", 4, \"ngIf\"], [1, \"col-xs-6\", \"col-sm-6\", \"col-md-5\", \"col-lg-5\"], [\"type\", \"button\", 1, \"btn\", \"inactive\", 3, \"ngClass\", \"disabled\", \"click\"], [\"successModal\", \"\"], [1, \"error\", 3, \"hidden\"], [\"class\", \"error\", 3, \"hidden\", 4, \"ngIf\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"], [\"href\", \"https://docs.linuxfoundation.org/lfx/v/v2/easycla/getting-started/easycla-faqs\", \"target\", \"_blank\"], [\"type\", \"button\", 1, \"btn\", \"back\", 3, \"click\"], [1, \"or-container\", \"row\", \"justify-content-center\", \"align-items-center\"], [1, \"col-5\"], [1, \"seperator\"], [1, \"col-auto\", \"or\"], [1, \"col-12\", \"buttons\"], [1, \"row\", \"justify-content-center\", \"align-items-center\"], [1, \"col-6\"], [1, \"row\", \"justify-content-center\", \"company-admin-container\"], [1, \"col-12\", \"msg\"], [1, \"col-auto\", \"contact-admin\", 3, \"click\"], [1, \"contact-admin\", 3, \"click\"], [1, \"model\"], [1, \"modal-body\"], [1, \"row\", \"justify-content-center\", \"success-dialog\"], [1, \"col-auto\"], [\"class\", \"fas fa-check-circle logo green\", 4, \"ngIf\"], [\"class\", \"fas fa-exclamation-circle logo red\", 4, \"ngIf\"], [1, \"col-12\", \"title\"], [1, \"col-11\", \"success-message\", 3, \"innerHTML\"], [\"class\", \"col-4\", 4, \"ngIf\"], [1, \"col-4\"], [\"type\", \"button\", 1, \"success-btn\", 3, \"click\"], [1, \"fas\", \"fa-check-circle\", \"logo\", \"green\"], [1, \"fas\", \"fa-exclamation-circle\", \"logo\", \"red\"], [\"type\", \"button\", 1, \"success-btn\", \"go-back\", 3, \"click\"]],\n    template: function IdentifyClaManagerModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtext(4, \" Please enter the name and email address of the person from your organization who will be the CLA Manager for this project \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelement(6, \"input\", 5, 6);\n        i0.ɵɵtemplate(8, IdentifyClaManagerModalComponent_div_8_Template, 8, 4, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 4);\n        i0.ɵɵelement(10, \"input\", 8);\n        i0.ɵɵtemplate(11, IdentifyClaManagerModalComponent_div_11_Template, 4, 2, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵtemplate(13, IdentifyClaManagerModalComponent_div_13_Template, 3, 0, \"div\", 10);\n        i0.ɵɵelementStart(14, \"div\", 11);\n        i0.ɵɵelementStart(15, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function IdentifyClaManagerModalComponent_Template_button_click_15_listener() {\n          return ctx.onClickSubmit();\n        });\n        i0.ɵɵtext(16, \" Submit Request \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, IdentifyClaManagerModalComponent_div_17_Template, 15, 2, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, IdentifyClaManagerModalComponent_ng_template_18_Template, 13, 5, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.name.errors && (ctx.form.controls.name.dirty || ctx.form.controls.name.touched));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.email.errors && (ctx.form.controls.email.dirty || ctx.form.controls.email.touched));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hasShowContactAdmin);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c2, ctx.form.valid))(\"disabled\", !ctx.form.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i6.NgIf, i6.NgClass],\n    styles: [\".message[_ngcontent-%COMP%]{color:#333;font-size:14px;text-align:center;padding:5px;margin:20px 0}.element[_ngcontent-%COMP%]{margin-bottom:15px}input[_ngcontent-%COMP%]{height:28px;color:#8492a6;font-size:12px;text-align:left;padding:5px;background:#ffffff;border:1px solid #8492a6;border-radius:0;margin-bottom:3px}.error[_ngcontent-%COMP%]{font-size:12px;color:red}.or-container[_ngcontent-%COMP%]{margin-top:15px}.or-container[_ngcontent-%COMP%]   .seperator[_ngcontent-%COMP%]{border:1px solid #e0e0e0}.or-container[_ngcontent-%COMP%]   .or[_ngcontent-%COMP%]{color:#333;font-size:18px;font-weight:bold;padding:0}.company-admin-container[_ngcontent-%COMP%]{margin-top:15px}.company-admin-container[_ngcontent-%COMP%]   .msg[_ngcontent-%COMP%]{color:#333;font-size:14px;text-align:center;padding:5px}.company-admin-container[_ngcontent-%COMP%]   .contact-admin[_ngcontent-%COMP%]{cursor:pointer;margin-top:20px;color:#09c;font-family:\\\"SourceSansPro-bold\\\";font-size:14px;font-weight:bold;text-decoration:underline;text-align:center}.btn[_ngcontent-%COMP%]{color:#fff;font-size:14px;font-weight:bold;font-family:\\\"SourceSansPro-bold\\\";text-align:center;background:#0099cc;border:0px solid #000000;border-radius:50px;margin:10px 0;padding:6px 0;width:100%}.btn.inactive[_ngcontent-%COMP%]{background:#9e9e9e;color:#fff;border:1px solid #9e9e9e}.btn.active[_ngcontent-%COMP%]{background:#0099cc!important;color:#fff}.btn.back[_ngcontent-%COMP%]{font-family:\\\"SourceSansPro\\\";background:#fff!important;color:#09c;border:1px solid #0099cc;font-style:normal;font-size:12px;font-weight:normal}\"]\n  });\n  return IdentifyClaManagerModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}