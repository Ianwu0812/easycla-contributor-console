{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, mergeMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport let InterceptorService = /*#__PURE__*/(() => {\n  class InterceptorService {\n    constructor(auth) {\n      this.auth = auth;\n    }\n    intercept(req, next) {\n      return this.auth.getIdToken$().pipe(mergeMap(token => {\n        if (!token) {\n          return next.handle(req.clone());\n        }\n        const tokenReq = req.clone({\n          setHeaders: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        return next.handle(tokenReq);\n      }), catchError(err => throwError(err)));\n    }\n  }\n  InterceptorService.ɵfac = function InterceptorService_Factory(t) {\n    return new (t || InterceptorService)(i0.ɵɵinject(i1.AuthService));\n  };\n  InterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InterceptorService,\n    factory: InterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n  return InterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module"}